    // Schnittpunkt dreier Ebenen mittels Cramer-Regel ermitteln
    // cramer
    ri = rj.Cross( rk);

    n1 = ri;
    n2 = rj;
    n3 = rk;

    n1.Normalise();
    b1 = 0;
    b2 = n2.Normalise();
    b3 = n3.Normalise();

    vislib::math::Matrix<float, 3, vislib::math::ROW_MAJOR> A, A1, A2, A3;

    A.SetAt( 0, 0, n1.X());
    A.SetAt( 0, 1, n1.Y());
    A.SetAt( 0, 2, n1.Z());
    A.SetAt( 1, 0, n2.X());
    A.SetAt( 1, 1, n2.Y());
    A.SetAt( 1, 2, n2.Z());
    A.SetAt( 2, 0, n3.X());
    A.SetAt( 2, 1, n3.Y());
    A.SetAt( 2, 2, n3.Z());
    
    A1.SetAt( 0, 0, b1);
    A1.SetAt( 0, 1, n1.Y());
    A1.SetAt( 0, 2, n1.Z());
    A1.SetAt( 1, 0, b2);
    A1.SetAt( 1, 1, n2.Y());
    A1.SetAt( 1, 2, n2.Z());
    A1.SetAt( 2, 0, b3);
    A1.SetAt( 2, 1, n3.Y());
    A1.SetAt( 2, 2, n3.Z());

    A2.SetAt( 0, 0, n1.X());
    A2.SetAt( 0, 1, b1);
    A2.SetAt( 0, 2, n1.Z());
    A2.SetAt( 1, 0, n2.X());
    A2.SetAt( 1, 1, b2);
    A2.SetAt( 1, 2, n2.Z());
    A2.SetAt( 2, 0, n3.X());
    A2.SetAt( 2, 1, b3);
    A2.SetAt( 2, 2, n3.Z());

    A3.SetAt( 0, 0, n1.X());
    A3.SetAt( 0, 1, n1.Y());
    A3.SetAt( 0, 2, b1);
    A3.SetAt( 1, 0, n2.X());
    A3.SetAt( 1, 1, n2.Y());
    A3.SetAt( 1, 2, b2);
    A3.SetAt( 2, 0, n3.X());
    A3.SetAt( 2, 1, n3.Y());
    A3.SetAt( 2, 2, b3);

    rm.SetX( A1.Determinant() / A.Determinant() );
    rm.SetY( A2.Determinant() / A.Determinant() );
    rm.SetZ( A3.Determinant() / A.Determinant() );
